{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\warre\\\\WebstormProjects\\\\nomahax_2019\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\warre\\\\WebstormProjects\\\\nomahax_2019\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\warre\\\\WebstormProjects\\\\nomahax_2019\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\warre\\\\WebstormProjects\\\\nomahax_2019\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\warre\\\\WebstormProjects\\\\nomahax_2019\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\warre\\\\WebstormProjects\\\\nomahax_2019\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\warre\\\\WebstormProjects\\\\nomahax_2019\\\\client\\\\src\\\\map\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker } from \"react-simple-maps\";\nimport { scaleLinear } from \"d3-scale\";\nimport request from \"express\";\nvar wrapperStyles = {\n  width: \"100%\",\n  maxWitdth: 980,\n  margin: \"0 auto\"\n};\nvar cityScale = scaleLinear().domain([0, 37843000]).range([1, 25]);\n\nvar BasicMap =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BasicMap, _Component);\n\n  function BasicMap() {\n    var _this;\n\n    _classCallCheck(this, BasicMap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BasicMap).call(this));\n    _this.state = {\n      cities: []\n    };\n    _this.fetchCities = _this.fetchCities.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BasicMap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchCities();\n    }\n  }, {\n    key: \"fetchCities\",\n    value: function fetchCities() {\n      var _this2 = this;\n\n      request.get(\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/examples/bubbles-map/static/world-most-populous-cities.json\").then(function (res) {\n        _this2.setState({\n          cities: res.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: wrapperStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(ComposableMap, {\n        projectionConfig: {\n          scale: 205,\n          rotation: [-11, 0, 0]\n        },\n        width: 980,\n        height: 551,\n        style: {\n          width: \"100%\",\n          height: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(ZoomableGroup, {\n        center: [0, 20],\n        disablePanning: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Geographies, {\n        geography: \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-50m.json\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, function (geographies, projection) {\n        return geographies.map(function (geography, i) {\n          return geography.id !== \"ATA\" && React.createElement(Geography, {\n            key: i,\n            geography: geography,\n            projection: projection,\n            style: {\n              default: {\n                fill: \"#ECEFF1\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#607D8B\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              },\n              pressed: {\n                fill: \"#FF5722\",\n                stroke: \"#607D8B\",\n                strokeWidth: 0.75,\n                outline: \"none\"\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          });\n        });\n      }))));\n    }\n  }]);\n\n  return BasicMap;\n}(Component);\n\nexport default BasicMap;","map":{"version":3,"sources":["C:\\Users\\warre\\WebstormProjects\\nomahax_2019\\client\\src\\map\\index.js"],"names":["React","Component","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","scaleLinear","request","wrapperStyles","width","maxWitdth","margin","cityScale","domain","range","BasicMap","state","cities","fetchCities","bind","get","then","res","setState","data","scale","rotation","height","geographies","projection","map","geography","i","id","default","fill","stroke","strokeWidth","outline","hover","pressed"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\r\nimport {\r\n    ComposableMap,\r\n    ZoomableGroup,\r\n    Geographies,\r\n    Geography,\r\n    Markers,\r\n    Marker,\r\n} from \"react-simple-maps\"\r\nimport { scaleLinear } from \"d3-scale\"\r\nimport request from \"express\"\r\n\r\nconst wrapperStyles = {\r\n    width: \"100%\",\r\n    maxWitdth: 980,\r\n    margin: \"0 auto\",\r\n};\r\n\r\nconst cityScale = scaleLinear()\r\n    .domain([0, 37843000])\r\n    .range([1,25]);\r\n\r\nclass BasicMap extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            cities: [],\r\n        };\r\n        this.fetchCities = this.fetchCities.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        this.fetchCities()\r\n    }\r\n    fetchCities() {\r\n        request\r\n            .get(\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/examples/bubbles-map/static/world-most-populous-cities.json\")\r\n            .then(res => {\r\n                this.setState({\r\n                    cities:res.data,\r\n                })\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={wrapperStyles}>\r\n                <ComposableMap\r\n                    projectionConfig={{\r\n                        scale: 205,\r\n                        rotation: [-11,0,0],\r\n                    }}\r\n                    width={980}\r\n                    height={551}\r\n                    style={{\r\n                        width: \"100%\",\r\n                        height: \"auto\",\r\n                    }}\r\n                    >\r\n                    <ZoomableGroup center={[0,20]} disablePanning>\r\n                        <Geographies geography=\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-50m.json\">\r\n                            {(geographies, projection) => geographies.map((geography, i) => geography.id !== \"ATA\" && (\r\n                                <Geography\r\n                                    key={i}\r\n                                    geography={geography}\r\n                                    projection={projection}\r\n                                    style={{\r\n                                        default: {\r\n                                            fill: \"#ECEFF1\",\r\n                                            stroke: \"#607D8B\",\r\n                                            strokeWidth: 0.75,\r\n                                            outline: \"none\",\r\n                                        },\r\n                                        hover: {\r\n                                            fill: \"#607D8B\",\r\n                                            stroke: \"#607D8B\",\r\n                                            strokeWidth: 0.75,\r\n                                            outline: \"none\",\r\n                                        },\r\n                                        pressed: {\r\n                                            fill: \"#FF5722\",\r\n                                            stroke: \"#607D8B\",\r\n                                            strokeWidth: 0.75,\r\n                                            outline: \"none\",\r\n                                        },\r\n                                    }}\r\n                                />\r\n                            ))}\r\n                        </Geographies>\r\n                    </ZoomableGroup>\r\n                </ComposableMap>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BasicMap"]},"metadata":{},"sourceType":"module"}